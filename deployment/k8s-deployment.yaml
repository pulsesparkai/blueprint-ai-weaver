apiVersion: apps/v1
kind: Deployment
metadata:
  name: contextforge-frontend
  labels:
    app: contextforge
    component: frontend
spec:
  replicas: 3
  selector:
    matchLabels:
      app: contextforge
      component: frontend
  template:
    metadata:
      labels:
        app: contextforge
        component: frontend
    spec:
      containers:
      - name: frontend
        image: contextforge:latest
        ports:
        - containerPort: 80
        env:
        - name: NODE_ENV
          value: "production"
        resources:
          requests:
            memory: "256Mi"
            cpu: "250m"
          limits:
            memory: "512Mi"
            cpu: "500m"
        livenessProbe:
          httpGet:
            path: /health
            port: 80
          initialDelaySeconds: 30
          periodSeconds: 30
        readinessProbe:
          httpGet:
            path: /health
            port: 80
          initialDelaySeconds: 5
          periodSeconds: 10

---
apiVersion: v1
kind: Service
metadata:
  name: contextforge-frontend-service
spec:
  selector:
    app: contextforge
    component: frontend
  ports:
  - port: 80
    targetPort: 80
  type: LoadBalancer

---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: contextforge-ingress
  annotations:
    kubernetes.io/ingress.class: nginx
    cert-manager.io/cluster-issuer: letsencrypt-prod
spec:
  tls:
  - hosts:
    - contextforge.yourdomain.com
    secretName: contextforge-tls
  rules:
  - host: contextforge.yourdomain.com
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: contextforge-frontend-service
            port:
              number: 80